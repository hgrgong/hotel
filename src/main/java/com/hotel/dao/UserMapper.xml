<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.hotel.dao.UserMapper">

<!--    <resultMap id="user" type="com.hotel.entity.User">
        <id property="id" column="uid" />
        <result property="name" column="name"/>
        <result property="gender" column="gender"/>
        <result property="password" column="password"/>
        <result property="mobile" column="mobile"/>
        <result property="email" column="email"/>
    </resultMap>-->
    
    <select id="selectAll" resultType="com.hotel.entity.User">
        select
            uid id, name, gender, password, mobile, email
        from user
    </select>

    <select id="selectById" resultType="com.hotel.entity.User">
        select
            uid id, name, gender, password, mobile, email
        from user
        where uid='#{id}'
    </select>

    <select id="selectByName" resultType="com.hotel.entity.User">
        select
        uid id, name, gender, password, mobile, email
        from user
        where name='#{name}'
    </select>

    <select id="selectCriteriaUserByName" resultType="com.hotel.entity.User">
        select
        uid id, name, gender, password, mobile, email
        from user
        where name like concat(concat('%', #{name}), '%')
    </select>

    <insert id="insert">
        insert into user(name, gender, password, mobile, email)
        values (#{name}, #{gender}, #{password}, #{mobile}, #{email})
    </insert>

    <insert id="insertBatch">
        insert into user(name, gender, password, mobile, email)
        values
        <foreach collection="list" item="com.hotel.entity.User" separator=",">
            (#{name}, #{gender}, #{password}, #{mobile}, #{email})
        </foreach>
    </insert>

    <update id="update">
        update user
        set
            name = '#{name}',
            gender = '#{gender}',
            password = '#{password}',
            mobile = '#{mobile}',
            email = '#{email}'
        where id = '#{id}'
    </update>

    <delete id="deleteById">
        delete from user where id = '#{id}'
    </delete>

    <delete id="deleteByName">
        delete from user where name = '#{name}'
    </delete>
</mapper>